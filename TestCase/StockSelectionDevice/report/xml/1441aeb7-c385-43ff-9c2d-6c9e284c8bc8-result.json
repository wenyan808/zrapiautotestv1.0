{"name": "test_StockSelectionDevice_modify01", "status": "broken", "statusDetails": {"message": "TypeError: issubclass() arg 1 must be a class", "trace": "self = <TestCase.StockSelectionDevice.test_StockSelectionDevice_02_modify.TestStockSelectionDeviceModify object at 0x000001D03BA2FB20>\n\n    @allure.story('修改策略_1-中国香港')\n    def test_StockSelectionDevice_modify01(self):\n        q = OperationSql(\"192.168.1.237\", \"root\", \"123456\", \"user_account\")\n        userId = q.show_sql(\"select id from t_user_account where `zr_no`= '68904140';\")\n>       _id = MongoDB(\"_id\",userId,\"stock_selector\",\"t_tactic6\")\n\ntest_StockSelectionDevice_02_modify.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Common\\show_sql.py:80: in MongoDB\n    client = MongoClient('192.168.1.236', 27017,dataname,tablename)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pymongo\\mongo_client.py:647: in __init__\n    dict(common.validate(k, v) for k, v in keyword_opts.items()))\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pymongo\\mongo_client.py:647: in <genexpr>\n    dict(common.validate(k, v) for k, v in keyword_opts.items()))\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pymongo\\common.py:725: in validate\n    value = validator(option, value)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pymongo\\common.py:432: in validate_document_class\n    if not issubclass(value, (abc.MutableMapping, RawBSONDocument)):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'collections.abc.MutableMapping'>, subclass = 'stock_selector'\n\n    def __subclasscheck__(cls, subclass):\n        \"\"\"Override for issubclass(subclass, cls).\"\"\"\n>       return _abc_subclasscheck(cls, subclass)\nE       TypeError: issubclass() arg 1 must be a class\n\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\abc.py:102: TypeError"}, "start": 1597040027609, "stop": 1597040027623, "uuid": "1c75136a-504d-47d6-96f2-7a903e0c1234", "historyId": "8dff92072f35e560d80c5814605ae57b", "testCaseId": "05fb960158dfbc3e5d891cb2d478e517", "fullName": "TestCase.StockSelectionDevice.test_StockSelectionDevice_02_modify.TestStockSelectionDeviceModify#test_StockSelectionDevice_modify01", "labels": [{"name": "story", "value": "修改策略_1-中国香港"}, {"name": "feature", "value": "选股器"}, {"name": "parentSuite", "value": "TestCase.StockSelectionDevice"}, {"name": "suite", "value": "test_StockSelectionDevice_02_modify"}, {"name": "subSuite", "value": "TestStockSelectionDeviceModify"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "35604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.StockSelectionDevice.test_StockSelectionDevice_02_modify"}]}