{"name": "test_search", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TestCase.StockSelectionDevice.test_strategy_search.TestClass object at 0x000001DE3FEC0438>\n\n    @allure.story('关键字查询股票（仅用于策略组合）')\n    def test_search(self):\n        response = zhuorui('选股器' , '关键字查询股票（仅用于策略组合）')\n        print(response.json())\n>       assert_data(response, '000000', 'ok')\n\ntest_strategy_search.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [200]>, code = '000000', msg = 'ok'\n\n    def assert_data(response: object, code: object, msg: object) -> object:\n>       assert code == response.json().get(\"code\")\nE       AssertionError\n\n..\\..\\Common\\assertapi.py:2: AssertionError"}, "start": 1611048954326, "stop": 1611048954387, "uuid": "fb946ee9-dcef-41a6-8c0c-6ea3d5f62aca", "historyId": "ed09a124045fc7a75b93303233f215a4", "testCaseId": "d7d4cfd84580d56254af1f139e2488ff", "fullName": "TestCase.StockSelectionDevice.test_strategy_search.TestClass#test_search", "labels": [{"name": "story", "value": "关键字查询股票（仅用于策略组合）"}, {"name": "feature", "value": "关键字查询股票（仅用于策略组合）"}, {"name": "parentSuite", "value": "TestCase.StockSelectionDevice"}, {"name": "suite", "value": "test_strategy_search"}, {"name": "subSuite", "value": "TestClass"}, {"name": "host", "value": "DESKTOP-CMIDUUG"}, {"name": "thread", "value": "25280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.StockSelectionDevice.test_strategy_search"}]}