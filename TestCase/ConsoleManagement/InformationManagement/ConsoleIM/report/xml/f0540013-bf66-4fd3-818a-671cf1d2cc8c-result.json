{"name": "test_IM_conNewsDisable", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False", "trace": "self = <TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_conNewsDisable.TestIMConNewsDisable object at 0x00000205FDDA4F40>\n\n    def test_IM_conNewsDisable(self):\n        url = console_HTTP + \"/api/con_news/v1/list\"\n        header = console_JSON\n    \n        # 拼装参数\n        paylo = {\n            \"pageSize\": 20,\n            \"currentPage\": 1,\n            \"type\": 1,\n            \"startTime\": TimeTostamp(),\n            \"endTime\": get_time_stamp13()\n        }\n        # paylo = info\n        # print(paylo)\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo)\n        payload1.update(sign1)\n        headers = {}\n        headers.update(header)\n        # print(token)\n        # print(type(token))\n        token = {\"token\": getConsoleLogin_token()}\n        headers.update(token)  # 将token更新到headers\n        # print(headers)\n        payload = json.dumps(dict(payload1))\n    \n        r = Requests(self.session).post(\n            url=url, headers=headers, data=payload, title=\"查询资讯列表\"\n        )\n    \n        j = r.json()\n        # print(j)\n        # print(j.get('data').get('list')[0].get('newsId'))\n        url_disable = console_HTTP + \"/api/con_news/v1/disable\"\n        paylo_disable = {\n            \"newsId\": f\"{j.get('data').get('list')[0].get('newsId')}\",\n            \"status\": 1\n        }\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo_disable)\n        payload1.update(sign1)\n        payload2 = json.dumps(dict(payload1))\n    \n        r = Requests(self.session).post(\n            url=url_disable, headers=headers, data=payload2, title=\"删除恢复资讯\"\n        )\n        # print(r.json())\n        assert r.status_code == 200\n        assert r.json().get(\"code\") == \"000000\"\n        assert r.json().get(\"msg\") == \"ok\"\n        assert r.json().get(\"data\") == True\n        url_disable = console_HTTP + \"/api/con_news/v1/disable\"\n        paylo_disable = {\n            \"newsId\": f\"{j.get('data').get('list')[0].get('newsId')}\",\n            \"status\": 0\n        }\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo_disable)\n        payload1.update(sign1)\n        payload2 = json.dumps(dict(payload1))\n    \n        r = Requests(self.session).post(\n            url=url_disable, headers=headers, data=payload2, title=\"删除恢复资讯\"\n        )\n        # print(r.json())\n        assert r.status_code == 200\n        assert r.json().get(\"code\") == \"000000\"\n        assert r.json().get(\"msg\") == \"ok\"\n>       assert r.json().get(\"data\") == False\nE       assert True == False\n\ntest_IM_conNewsDisable.py:102: AssertionError"}, "start": 1611647168581, "stop": 1611647168741, "uuid": "0794db67-4c83-40dc-aef1-06924cb1aac4", "historyId": "ebcd75da2b4a3e54a4c74646a758cd7a", "testCaseId": "9b551a58a1821c315e736ef12df94f5e", "fullName": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_conNewsDisable.TestIMConNewsDisable#test_IM_conNewsDisable", "labels": [{"name": "feature", "value": "资讯console_删除恢复资讯"}, {"name": "parentSuite", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM"}, {"name": "suite", "value": "test_IM_conNewsDisable"}, {"name": "subSuite", "value": "TestIMConNewsDisable"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "11148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_conNewsDisable"}]}