{"name": "test_IM_NewsList", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'list' in [{'codes': 'HK_00700', 'newsId': 18459, 'pubTime': 1611624242000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId'...1000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId': 17284, 'pubTime': 1611278684000, 'readCount': 0, ...}, ...]\n +  where [{'codes': 'HK_00700', 'newsId': 18459, 'pubTime': 1611624242000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId'...1000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId': 17284, 'pubTime': 1611278684000, 'readCount': 0, ...}, ...] = <built-in method get of dict object at 0x0000021F618ED7C0>('data')\n +    where <built-in method get of dict object at 0x0000021F618ED7C0> = {'code': '000000', 'data': [{'codes': 'HK_00700', 'newsId': 18459, 'pubTime': 1611624242000, 'readCount': 0, ...}, {'c...nt': 0, ...}, {'codes': 'HK_00700', 'newsId': 17284, 'pubTime': 1611278684000, 'readCount': 0, ...}, ...], 'msg': 'ok'}.get", "trace": "self = <TestCase.ConsoleManagement.InformationManagement.AppIM.test_IM_NewsList.TestIMNewsList object at 0x0000021F634499A0>\n\n    def test_IM_NewsList(self):\n        url = HTTP + \"/as_stock_information/api/news/v1/list\"\n        header = JSON\n    \n        # 拼装参数\n        paylo = {\n            \"pageSize\": 10,\n            \"selectedCodes\": \"HK_00700\"\n        }\n        # paylo = info\n        # print(paylo)\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo)\n        payload1.update(sign1)\n        headers = {}\n        headers.update(header)\n        # print(token)\n        # print(type(token))\n        token = {\"token\": getConsoleLogin_token()}\n        headers.update(token)  # 将token更新到headers\n        # print(headers)\n        payload = json.dumps(dict(payload1))\n        # time.sleep(60.01)\n    \n        r = Requests(self.session).post(\n            url=url, headers=headers, data=payload, title=\"查询资讯信息（包含个股，自选股）\"\n        )\n    \n        j = r.json()\n        print(j)\n        assert r.status_code == 200\n        assert j.get(\"code\") == \"000000\"\n        assert j.get(\"msg\") == \"ok\"\n        if \"data\" in j:\n            if len(j.get(\"data\")) != 0:\n>               assert \"list\" in j.get(\"data\")\nE               AssertionError: assert 'list' in [{'codes': 'HK_00700', 'newsId': 18459, 'pubTime': 1611624242000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId'...1000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId': 17284, 'pubTime': 1611278684000, 'readCount': 0, ...}, ...]\nE                +  where [{'codes': 'HK_00700', 'newsId': 18459, 'pubTime': 1611624242000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId'...1000, 'readCount': 0, ...}, {'codes': 'HK_00700', 'newsId': 17284, 'pubTime': 1611278684000, 'readCount': 0, ...}, ...] = <built-in method get of dict object at 0x0000021F618ED7C0>('data')\nE                +    where <built-in method get of dict object at 0x0000021F618ED7C0> = {'code': '000000', 'data': [{'codes': 'HK_00700', 'newsId': 18459, 'pubTime': 1611624242000, 'readCount': 0, ...}, {'c...nt': 0, ...}, {'codes': 'HK_00700', 'newsId': 17284, 'pubTime': 1611278684000, 'readCount': 0, ...}, ...], 'msg': 'ok'}.get\n\ntest_IM_NewsList.py:69: AssertionError"}, "start": 1611729395808, "stop": 1611729395978, "uuid": "5ddce1f1-9fde-4d4f-9d27-46e2d2bfdf9b", "historyId": "896f930269c62d7e570f4cd18930132c", "testCaseId": "a18e832fdac60e0e4c4ffea5a216be4b", "fullName": "TestCase.ConsoleManagement.InformationManagement.AppIM.test_IM_NewsList.TestIMNewsList#test_IM_NewsList", "labels": [{"name": "feature", "value": "资讯app_查询资讯信息（包含个股，自选股）"}, {"name": "parentSuite", "value": "TestCase.ConsoleManagement.InformationManagement.AppIM"}, {"name": "suite", "value": "test_IM_NewsList"}, {"name": "subSuite", "value": "TestIMNewsList"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "12916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.ConsoleManagement.InformationManagement.AppIM.test_IM_NewsList"}]}