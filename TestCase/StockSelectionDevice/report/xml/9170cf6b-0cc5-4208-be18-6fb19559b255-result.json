{"name": "test_StockSelectionDevice_put01", "status": "broken", "statusDetails": {"message": "TypeError: exceptions must derive from BaseException", "trace": "self = <TestCase.StockSelectionDevice.test_StockSelectionDevice_01_put.TestStockSelectionDevicePut object at 0x000002D0B42929D0>\n\n    @allure.story('保存策略_1-中国香港')\n    def test_StockSelectionDevice_put01(self):\n        response = zhuorui('选股器', '保存策略_1-中国香港')\n        assert response.status_code == 200\n        # print(response.json())\n        if response.json().get(\"code\") == \"000000\":\n            assert_data(response, '000000', 'ok')\n        elif response.json().get(\"code\") == \"450001\":\n            assert_data(response, '450001', '策略名称已存在')\n>           raise ('策略名称已存在')\nE           TypeError: exceptions must derive from BaseException\n\ntest_StockSelectionDevice_01_put.py:23: TypeError"}, "start": 1601176506090, "stop": 1601176506210, "uuid": "605ad6b4-0955-4065-8837-dfe98b0ec32b", "historyId": "cd091e30e3ac5f2c4c6c3cff812b68b0", "testCaseId": "4f07daa2bdcec88b7a030df68ba7e5ff", "fullName": "TestCase.StockSelectionDevice.test_StockSelectionDevice_01_put.TestStockSelectionDevicePut#test_StockSelectionDevice_put01", "labels": [{"name": "story", "value": "保存策略_1-中国香港"}, {"name": "feature", "value": "选股器"}, {"name": "parentSuite", "value": "TestCase.StockSelectionDevice"}, {"name": "suite", "value": "test_StockSelectionDevice_01_put"}, {"name": "subSuite", "value": "TestStockSelectionDevicePut"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "16172-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.StockSelectionDevice.test_StockSelectionDevice_01_put"}]}