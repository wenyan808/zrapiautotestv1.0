{"name": "test_IM_NewsList[info21]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'codes' in {'newsId': 4570, 'pubTime': 1609999532000, 'readCount': 0, 'source': '智通财经', ...}", "trace": "self = <TestCase.ConsoleManagement.InformationManagement.AppIM.test_IM_NewsList.TestIMNewsList object at 0x00000213CF14F670>\ninfo = {'market': 2, 'pageSize': 10, 'type': 0}\n\n    @pytest.mark.parametrize('info',\n                             get_json(BASE_DIR + r\"/TestData/testIMData/test_IM_NewsList.json\"))\n    def test_IM_NewsList(self,info):\n        url = HTTP + \"/as_stock_information/api/news/v1/list\"\n        header = JSON\n    \n        # 拼装参数\n        # paylo = {\n        #     \"pageSize\": 10,\n        #     \"selectedCodes\": \"HK_00700\"\n        # }\n        paylo = info\n        # print(paylo)\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo)\n        payload1.update(sign1)\n        headers = {}\n        headers.update(header)\n        # print(token)\n        # print(type(token))\n        token = {\"token\": getConsoleLogin_token()}\n        headers.update(token)  # 将token更新到headers\n        # print(headers)\n        payload = json.dumps(dict(payload1))\n        # time.sleep(60.01)\n    \n        r = Requests(self.session).post(\n            url=url, headers=headers, data=payload, title=\"查询资讯信息（包含个股，自选股）\"\n        )\n    \n        j = r.json()\n        print(j)\n        assert r.status_code == 200\n        assert j.get(\"code\") == \"000000\"\n        assert j.get(\"msg\") == \"ok\"\n        if \"data\" in j:\n            if len(j.get(\"data\")) != 0:\n                for i in range(len(j.get(\"data\"))):\n                    assert \"newsId\" in j.get(\"data\")[i]\n                    assert \"title\" in j.get(\"data\")[i]\n                    assert \"source\" in j.get(\"data\")[i]\n                    assert \"themeImg\" in j.get(\"data\")[i]\n                    assert \"pubTime\" in j.get(\"data\")[i]\n                    assert \"readCount\" in j.get(\"data\")[i]\n>                   assert \"codes\" in j.get(\"data\")[i]\nE                   AssertionError: assert 'codes' in {'newsId': 4570, 'pubTime': 1609999532000, 'readCount': 0, 'source': '智通财经', ...}\n\ntest_IM_NewsList.py:76: AssertionError"}, "parameters": [{"name": "info", "value": "{'pageSize': 10, 'type': 0, 'market': 2}"}], "start": 1611734115354, "stop": 1611734115495, "uuid": "99a037f7-7897-46e1-ab9a-07ae7827c14e", "historyId": "8934bd1b2458b38844ba2f0ac2f96b8e", "testCaseId": "a18e832fdac60e0e4c4ffea5a216be4b", "fullName": "TestCase.ConsoleManagement.InformationManagement.AppIM.test_IM_NewsList.TestIMNewsList#test_IM_NewsList", "labels": [{"name": "feature", "value": "资讯app_查询资讯信息（包含个股，自选股）"}, {"name": "parentSuite", "value": "TestCase.ConsoleManagement.InformationManagement.AppIM"}, {"name": "suite", "value": "test_IM_NewsList"}, {"name": "subSuite", "value": "TestIMNewsList"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "19804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.ConsoleManagement.InformationManagement.AppIM.test_IM_NewsList"}]}