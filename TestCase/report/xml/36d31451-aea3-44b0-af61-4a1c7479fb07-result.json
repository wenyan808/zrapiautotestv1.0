{"name": "test_AfterPowerFactor_HK", "status": "broken", "statusDetails": {"message": "TypeError: eval() arg 1 must be a string, bytes or code object", "trace": "self = <TestCase.test_AfterPowerFactor_HK.TestAfterPowerFactor object at 0x000001EB3C823EB0>\n\n    @allure.story('查询最新复权因子_HK')\n    def test_AfterPowerFactor_HK(self):\n        # # response = zhuorui('k线', '查询最新复权因子_HK')\n        #\n        # assert_data(response, '000000', 'ok')\n        # assert response.status_code == 200\n        # # print(response.json())\n        http = HTTP\n        header = JSON\n        # token2, urll, requestmode, paylop = i[3], i[5], i[6], i[7]\n        token2 = 1\n        urll = \"/as_market/api/newest_adj/v1/get\"\n        paylop = {\"ts\": \"HK\", \"code\": \"00700\"}\n        url = http + urll\n        # print(url)\n>       paylo = eval(paylop)\nE       TypeError: eval() arg 1 must be a string, bytes or code object\n\ntest_AfterPowerFactor_HK.py:35: TypeError"}, "start": 1595586946212, "stop": 1595586946213, "uuid": "8eed1c56-0473-424d-a330-992016b79e86", "historyId": "e7f7b4e5fa9b4d46bbb134627390e0dd", "testCaseId": "c1bf7fb38b9c1da35933c8e47df0ea0f", "fullName": "TestCase.test_AfterPowerFactor_HK.TestAfterPowerFactor#test_AfterPowerFactor_HK", "labels": [{"name": "feature", "value": "k线"}, {"name": "story", "value": "查询最新复权因子_HK"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_AfterPowerFactor_HK"}, {"name": "subSuite", "value": "TestAfterPowerFactor"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "972-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_AfterPowerFactor_HK"}]}