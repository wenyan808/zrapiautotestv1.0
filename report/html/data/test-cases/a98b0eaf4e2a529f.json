{
  "uid" : "a98b0eaf4e2a529f",
  "name" : "test_code_all",
  "fullName" : "TestCase.StockQuotation.OptionalStock.test_del_optional_stock.TestDelOptionalStock#test_code_all",
  "historyId" : "1d26b1eaa697071521f02e5afd505b2e",
  "time" : {
    "start" : 1593328815103,
    "stop" : 1593328815159,
    "duration" : 56
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <TestCase.StockQuotation.OptionalStock.test_del_optional_stock.TestDelOptionalStock object at 0x11EA5390>\n\n    @allure.story('删除自选股_根据code_All')\n    def test_code_all(self):\n        response = zhuorui('自选股', '删除自选股_根据code_All')\n>       assert_data(response, '000000', 'ok')\n\nTestCase\\StockQuotation\\OptionalStock\\test_del_optional_stock.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, code = '000000', msg = 'ok'\n\n    def assert_data(response, code, msg):\n        assert code == response.json().get(\"code\")\n        assert msg == response.json().get(\"msg\")\n>       assert \"data\" in response.json()\nE       AssertionError\n\nCommon\\assertapi.py:4: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1593328815081,
      "stop" : 1593328815102,
      "duration" : 21
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1593328815276,
      "stop" : 1593328815276,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "删除自选股_根据code_All"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.StockQuotation.OptionalStock"
  }, {
    "name" : "suite",
    "value" : "test_del_optional_stock"
  }, {
    "name" : "subSuite",
    "value" : "TestDelOptionalStock"
  }, {
    "name" : "host",
    "value" : "DESKTOP-7K7NA43"
  }, {
    "name" : "thread",
    "value" : "38524-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.StockQuotation.OptionalStock.test_del_optional_stock"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a98b0eaf4e2a529f.json",
  "parameterValues" : [ ]
}