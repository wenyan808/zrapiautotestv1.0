{"name": "test_detail_US", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "cls = <class 'TestCase.StockQuotation.StocksDetails.test_detail.TestDetail'>\n\n    @classmethod\n    def setup_class(cls) -> None:\n>       login()\n\ntest_detail.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\Common\\login.py:18: in login\n    res = response_login.json().get(\"data\").get(\"token\")\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x042BF1D0>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.16.1</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\json\\decoder.py:357: JSONDecodeError"}, "start": 1594362446238, "stop": 1594362446238, "uuid": "dcd00a3c-e64b-4ee0-b7ec-6f2872ca0cc6", "historyId": "172695061321e8455123b62a96e4035e", "testCaseId": "cd17b2d26add9187fae6df4a8b614677", "fullName": "TestCase.StockQuotation.StocksDetails.test_detail.TestDetail#test_detail_US", "labels": [{"name": "story", "value": "查询逐笔成交_US大盘"}, {"name": "parentSuite", "value": "TestCase.StockQuotation.StocksDetails"}, {"name": "suite", "value": "test_detail"}, {"name": "subSuite", "value": "TestDetail"}, {"name": "host", "value": "DESKTOP-7K7NA43"}, {"name": "thread", "value": "13008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.StockQuotation.StocksDetails.test_detail"}]}