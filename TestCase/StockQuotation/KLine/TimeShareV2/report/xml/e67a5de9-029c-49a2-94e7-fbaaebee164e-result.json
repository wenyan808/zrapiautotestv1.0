{"name": "test_timeSharev2_USshare_adjTypeof2", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <TestCase.StockQuotation.KLine.TimeShareV2.test_TimeShareV2_USshare.TestTimeSharev2USshare object at 0x00000238B2A5E2B0>\n\n    @allure.story('分时查询_优化版本 Version 2.0_US个股_adjType类型为2前复权')\n    def test_timeSharev2_USshare_adjTypeof2(self):\n        response = zhuorui('k线', '分时查询_优化版本 Version 2.0_US个股_adjType类型为2前复权')\n        # assert_data(response, '000000', 'ok')\n        # assert response.status_code == 200\n>       print(response.json())\n\ntest_TimeShareV2_USshare.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x00000238A69BDDF0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\decoder.py:355: JSONDecodeError"}, "start": 1594806182171, "stop": 1594806182208, "uuid": "d0c16029-1fd8-4a2e-98b5-7569cf853ed9", "historyId": "f363eb02445751efd41ee3dcaa5a3747", "testCaseId": "595813079e9eea0f0ec060cae18684ce", "fullName": "TestCase.StockQuotation.KLine.TimeShareV2.test_TimeShareV2_USshare.TestTimeSharev2USshare#test_timeSharev2_USshare_adjTypeof2", "labels": [{"name": "story", "value": "分时查询_优化版本 Version 2.0_US个股_adjType类型为2前复权"}, {"name": "feature", "value": "k线"}, {"name": "parentSuite", "value": "TestCase.StockQuotation.KLine.TimeShareV2"}, {"name": "suite", "value": "test_TimeShareV2_USshare"}, {"name": "subSuite", "value": "TestTimeSharev2USshare"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "40536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.StockQuotation.KLine.TimeShareV2.test_TimeShareV2_USshare"}]}