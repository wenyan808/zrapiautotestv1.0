{"name": "test_IM_GetNewInfoList", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_conNewsList.TestIMGetNewInfoList object at 0x0000023A6012FB80>\n\n    def test_IM_GetNewInfoList(self):\n        url = console_HTTP + \"/as_stock_information/api/important_news/v1/all_info_list_new\"\n        header = console_JSON\n    \n        # 拼装参数\n        paylo = {\n            \"pageSize\":20,\n            \"currentPage\":1\n        }\n        # paylo = info\n        # print(paylo)\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo)\n        payload1.update(sign1)\n        headers = {}\n        headers.update(header)\n        # print(token)\n        # print(type(token))\n>       token = {\"token\": getConsoleLogin_token()}\n\ntest_IM_conNewsList.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\Common\\getConsoleLogin.py:25: in getConsoleLogin_token\n    j = rlogintoken.json()\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000023A5F9AC6A0>\ns = '<html>\\r\\n<head><title>404 Not Found</title></head>\\r\\n<body>\\r\\n<center><h1>404 Not Found</h1></center>\\r\\n<hr><cent...sable MSIE and Chrome friendly error page -->\\r\\n<!-- a padding to disable MSIE and Chrome friendly error page -->\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\decoder.py:355: JSONDecodeError"}, "start": 1611568272963, "stop": 1611568272970, "uuid": "9575ac5e-bff8-45f5-955c-757f66ca8336", "historyId": "a083e7dfe613a5abad4a1cb0866a02a5", "testCaseId": "30d5c28429462505653cc2e403c3d13e", "fullName": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_conNewsList.TestIMGetNewInfoList#test_IM_GetNewInfoList", "labels": [{"name": "feature", "value": "资讯console_要闻-获取最新的数据"}, {"name": "parentSuite", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM"}, {"name": "suite", "value": "test_IM_conNewsList"}, {"name": "subSuite", "value": "TestIMGetNewInfoList"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "66268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_conNewsList"}]}