{"name": "test_code_all_notoken", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TestCase.StockQuotation.OptionalStock.test_del_optional_stock.TestDelOptionalStock object at 0x13401D50>\n\n    @allure.story('删除自选股无token_根据code_All')\n    def test_code_all_notoken(self):\n        response = zhuorui('自选股', '删除自选股无token_根据code_All')\n        # print(response.json())\n>       assert_data(response, '000101', 'token不能为空')\n\nTestCase\\StockQuotation\\OptionalStock\\test_del_optional_stock.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, code = '000101', msg = 'token不能为空'\n\n    def assert_data(response: object, code: object, msg: object) -> object:\n>       assert code == response.json().get(\"code\")\nE       AssertionError\n\nCommon\\assertapi.py:2: AssertionError"}, "start": 1594177081265, "stop": 1594177081371, "uuid": "0807e475-0631-4e00-9a08-5c9e0912dba3", "historyId": "217eb93498bf67470d02854a38043c48", "testCaseId": "e7ce6ee30d6e5214d96736f4789645fd", "fullName": "TestCase.StockQuotation.OptionalStock.test_del_optional_stock.TestDelOptionalStock#test_code_all_notoken", "labels": [{"name": "story", "value": "删除自选股无token_根据code_All"}, {"name": "parentSuite", "value": "TestCase.StockQuotation.OptionalStock"}, {"name": "suite", "value": "test_del_optional_stock"}, {"name": "subSuite", "value": "TestDelOptionalStock"}, {"name": "host", "value": "DESKTOP-7K7NA43"}, {"name": "thread", "value": "5832-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.StockQuotation.OptionalStock.test_del_optional_stock"}]}