{
  "uid" : "4ead75868fb1cd3",
  "name" : "test_all_notoken",
  "fullName" : "TestCase.StockQuotation.OptionalStock.test_del_optional_stock.TestDelOptionalStock#test_all_notoken",
  "historyId" : "3e22adcd1b615a9704319d0e6e379281",
  "time" : {
    "start" : 1594176368152,
    "stop" : 1594176368323,
    "duration" : 171
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <TestCase.StockQuotation.OptionalStock.test_del_optional_stock.TestDelOptionalStock object at 0x12D418B0>\n\n    @allure.story('删除自选股无token_All')\n    def test_all_notoken(self):\n        q = OperationSql()\n        userId = str(q.show_sql(\"select id from t_user_account where `zr_no`= '68904140';\"))\n        id = MongoDB(\"userId\", userId[2:-3:])\n        list1 = list()\n        for id1 in id:\n            list1.append(str(id1.get('_id')))\n        _id = {\"ids\": list1}\n        # 写\n        write_xlsx(\"自选股\", 69, 7, str(_id))\n        response = zhuorui('自选股', '删除自选股无token_All')\n>       assert_data(response, '000101', 'token不能为空')\n\nTestCase\\StockQuotation\\OptionalStock\\test_del_optional_stock.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, code = '000101', msg = 'token不能为空'\n\n    def assert_data(response: object, code: object, msg: object) -> object:\n>       assert code == response.json().get(\"code\")\nE       AssertionError\n\nCommon\\assertapi.py:2: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1594176367734,
      "stop" : 1594176367755,
      "duration" : 21
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1594176368328,
      "stop" : 1594176368328,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "删除自选股无token_All"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.StockQuotation.OptionalStock"
  }, {
    "name" : "suite",
    "value" : "test_del_optional_stock"
  }, {
    "name" : "subSuite",
    "value" : "TestDelOptionalStock"
  }, {
    "name" : "host",
    "value" : "DESKTOP-7K7NA43"
  }, {
    "name" : "thread",
    "value" : "19992-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.StockQuotation.OptionalStock.test_del_optional_stock"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "4ead75868fb1cd3.json",
  "parameterValues" : [ ]
}