{"uuid": "490cab99-af4a-46c6-ad39-1be2c1423318", "children": ["e7d6ea7e-586d-40e4-8a01-6b0c1672c589"], "befores": [{"name": "_Class__pytest_setup_class", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\fixtures.py\", line 964, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\fixtures.py\", line 788, in call_fixture_func\n    res = next(it)\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\python.py\", line 703, in xunit_setup_class_fixture\n    _call_with_optional_argument(func, self.obj)\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\python.py\", line 634, in _call_with_optional_argument\n    func(arg)\n  File \"F:\\python\\zrapiautotestv1.0\\TestCase\\StockQuotation\\StocksDetails\\test_detail.py\", line 12, in setup_class\n    login()\n  File \"F:\\python\\zrapiautotestv1.0\\Common\\login.py\", line 18, in login\n    res = response_login.json().get(\"data\").get(\"token\")\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\requests\\models.py\", line 898, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "start": 1594362413407, "stop": 1594362413422}], "start": 1594362413407, "stop": 1594362413500}