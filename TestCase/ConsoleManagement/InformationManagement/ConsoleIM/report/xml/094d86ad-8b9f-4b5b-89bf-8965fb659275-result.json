{"name": "test_IM_AnnouncementDisable[info1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200", "trace": "self = <TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_AnnouncementDisable.TestIMAnnouncementDisable object at 0x000002119DC33AF0>\ninfo = {'status': 0}\n\n    @pytest.mark.parametrize('info',\n                             get_json(BASE_DIR + r\"/TestData/testIMData/test_IM_AnnouncementDisable.json\"))\n    def test_IM_AnnouncementDisable(self,info):\n        url = console_HTTP + \"/api/con_stock_announcement/v1/list\"\n        header = console_JSON\n    \n        # 拼装参数\n        paylo = {\n            \"pageSize\": 20,\n            \"currentPage\": 1,\n            \"startTime\": TimeTostamp(),\n            \"endTime\": get_time_stamp13()\n        }\n        # paylo = info\n        # print(paylo)\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo)\n        payload1.update(sign1)\n        headers = {}\n        headers.update(header)\n        # print(token)\n        # print(type(token))\n        token = {\"token\": getConsoleLogin_token()}\n        headers.update(token)  # 将token更新到headers\n        # print(headers)\n        payload = json.dumps(dict(payload1))\n    \n        r = Requests(self.session).post(\n            url=url, headers=headers, data=payload, title=\"查询资讯列表\"\n        )\n    \n        j = r.json()\n        # print(j)\n        # print(j.get('data').get('list')[0].get('annexId'))\n        url_disable = console_HTTP + \"/api/con_stock_announcement/disable\"\n        paylo_disable = {\n            \"annexId\": f\"{j.get('data').get('list')[0].get('annexId')}\"\n        }\n        paylo_disable1 = info\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo_disable)\n        payload1.update(paylo_disable1)\n        payload1.update(sign1)\n        payload2 = json.dumps(dict(payload1))\n    \n        r = Requests(self.session).post(\n            url=url_disable, headers=headers, data=payload2, title=\"删除恢复公告\"\n        )\n        print(r.json())\n>       assert r.status_code == 200\nE       assert 500 == 200\n\ntest_IM_AnnouncementDisable.py:82: AssertionError"}, "parameters": [{"name": "info", "value": "{'status': 0}"}], "start": 1611655976999, "stop": 1611655977228, "uuid": "92d9bddf-973f-4b29-83f1-23c615877718", "historyId": "a8945a784044678896cfe46e3416071a", "testCaseId": "4fdacafbb1b4dd54a3f0db9630d2b36e", "fullName": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_AnnouncementDisable.TestIMAnnouncementDisable#test_IM_AnnouncementDisable", "labels": [{"name": "feature", "value": "资讯console_删除恢复资讯"}, {"name": "parentSuite", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM"}, {"name": "suite", "value": "test_IM_AnnouncementDisable"}, {"name": "subSuite", "value": "TestIMAnnouncementDisable"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "16020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_AnnouncementDisable"}]}