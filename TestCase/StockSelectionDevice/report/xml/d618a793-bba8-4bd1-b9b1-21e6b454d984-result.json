{"name": "test_StockSelectionDevice_count", "status": "broken", "statusDetails": {"message": "TypeError: object of type 'int' has no len()", "trace": "self = <TestCase.StockSelectionDevice.test_StockSelectionDevice_count.TestStockSelectionDeviceCount object at 0x000002245348CDC0>\n\n    @allure.story('用户所有策略条数查询')\n    def test_StockSelectionDevice_count(self):\n        # 通过传入数据库的IP地址address，用户名user，密码password，数据库名database连接到后台数据库\n        # q = OperationSql(\"192.168.1.237\", \"root\", \"123456\", \"user_account\")\n        # 通过查询语句找到用户id\n        # userId = q.show_sql(\"select id from t_user_account where `zr_no`= '68904140';\")\n        # 传入键key，值price，数据库名database，表名surface到MongoDB数据库\n        # id = MongoDB(\"user_id\", str(userId)[3:-5:], \"stock_selector\", \"t_tactic6\")\n        # print(str(userId)[3:-5:])\n        # _id = str(id[-1].get('_id'))\n        # print(_id)\n        url = HTTP + \"/as_market/api/stock_selector/v1/tactic/count\"\n        headers = JSON\n    \n        # 拼装参数\n        # name = get_unique_username(1)[0]\n        # print(name)\n        paylo = {}\n        # paylo.update(_id)\n        # print(paylo)\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        # 调用登录接口通过token传出来\n        payload1 = {}\n        payload1.update(paylo)\n        payload1.update(sign1)\n        headers = headers\n        # print(token)\n        # print(type(token))\n    \n        token1 = yamltoken()\n        token = {\"token\": token1}\n        headers.update(token)\n        # print(headers)\n        payload = json.dumps(dict(payload1))\n        # print(payload)\n    \n        r = requests.post(url=url, headers=headers, data=payload)\n        j = r.json()\n        print(j)\n        assert r.status_code == 200\n        assert j.get(\"code\") == \"000000\"\n        assert j.get(\"msg\") == \"ok\"\n        if \"data\" in r.json():\n>           if len(j.get(\"data\")) != 0:\nE           TypeError: object of type 'int' has no len()\n\ntest_StockSelectionDevice_count.py:65: TypeError"}, "start": 1601198553664, "stop": 1601198553681, "uuid": "f8249c3f-5213-4aa6-ba5e-4369aace6940", "historyId": "d4416109042775d15c0a14777831ffcc", "testCaseId": "13004303b1ca98db21c69803ccf04c9f", "fullName": "TestCase.StockSelectionDevice.test_StockSelectionDevice_count.TestStockSelectionDeviceCount#test_StockSelectionDevice_count", "labels": [{"name": "feature", "value": "选股器"}, {"name": "story", "value": "用户所有策略条数查询"}, {"name": "parentSuite", "value": "TestCase.StockSelectionDevice"}, {"name": "suite", "value": "test_StockSelectionDevice_count"}, {"name": "subSuite", "value": "TestStockSelectionDeviceCount"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "21496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.StockSelectionDevice.test_StockSelectionDevice_count"}]}