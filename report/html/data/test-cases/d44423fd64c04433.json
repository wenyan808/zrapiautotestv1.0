{
  "uid" : "d44423fd64c04433",
  "name" : "test_syn_all_notoken",
  "fullName" : "TestCase.StockQuotation.OptionalStock.test_syn_optional_stock.TestSynOptionalStock#test_syn_all_notoken",
  "historyId" : "8ca251f020408eb8befb2cd9df1eb053",
  "time" : {
    "start" : 1594175501170,
    "stop" : 1594175501220,
    "duration" : 50
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <TestCase.StockQuotation.OptionalStock.test_syn_optional_stock.TestSynOptionalStock object at 0x129BE4F0>\n\n    @allure.story('同步自选股无token_All')\n    def test_syn_all_notoken(self):\n        response = zhuorui('自选股', '同步自选股无token_All')\n        # print(response.json())\n>       assert_data(response, '000101', 'token不能为空')\n\nTestCase\\StockQuotation\\OptionalStock\\test_syn_optional_stock.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, code = '000101', msg = 'token不能为空'\n\n    def assert_data(response: object, code: object, msg: object) -> object:\n>       assert code == response.json().get(\"code\")\nE       AssertionError\n\nCommon\\assertapi.py:2: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1594175501029,
      "stop" : 1594175501051,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1594175501225,
      "stop" : 1594175501225,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "同步自选股无token_All"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.StockQuotation.OptionalStock"
  }, {
    "name" : "suite",
    "value" : "test_syn_optional_stock"
  }, {
    "name" : "subSuite",
    "value" : "TestSynOptionalStock"
  }, {
    "name" : "host",
    "value" : "DESKTOP-7K7NA43"
  }, {
    "name" : "thread",
    "value" : "11296-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.StockQuotation.OptionalStock.test_syn_optional_stock"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d44423fd64c04433.json",
  "parameterValues" : [ ]
}