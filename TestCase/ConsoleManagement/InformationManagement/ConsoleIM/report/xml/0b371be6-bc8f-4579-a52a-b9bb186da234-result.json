{"name": "test_IM_AnnouncementDisable[info1]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_AnnouncementDisable.TestIMAnnouncementDisable object at 0x000001FEA30D5FA0>\ninfo = {'status': 0}\n\n    @pytest.mark.parametrize('info',\n                             get_json(BASE_DIR + r\"/TestData/testIMData/test_IM_AnnouncementDisable.json\"))\n    def test_IM_AnnouncementDisable(self,info):\n        url = console_HTTP + \"/api/con_stock_announcement/v1/list\"\n        header = console_JSON\n    \n        # 拼装参数\n        paylo = {\n            \"pageSize\": 20,\n            \"currentPage\": 1,\n            \"startTime\": TimeTostamp(),\n            \"endTime\": get_time_stamp13()\n        }\n        # paylo = info\n        # print(paylo)\n        sign1 = {\"sign\": get_sign(paylo)}  # 把参数签名后通过sign1传出来\n        payload1 = {}\n        payload1.update(paylo)\n        payload1.update(sign1)\n        headers = {}\n        headers.update(header)\n        # print(token)\n        # print(type(token))\n>       token = {\"token\": getConsoleLogin_token()}\n\ntest_IM_AnnouncementDisable.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\Common\\getConsoleLogin.py:25: in getConsoleLogin_token\n    j = rlogintoken.json()\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001FEA316C5E0>\ns = '<html>\\r\\n<head><title>404 Not Found</title></head>\\r\\n<body>\\r\\n<center><h1>404 Not Found</h1></center>\\r\\n<hr><cent...sable MSIE and Chrome friendly error page -->\\r\\n<!-- a padding to disable MSIE and Chrome friendly error page -->\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nC:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python38\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "info", "value": "{'status': 0}"}], "start": 1611656927612, "stop": 1611656927618, "uuid": "bd8090ec-0f82-4420-a053-a85f0a9da8da", "historyId": "a8945a784044678896cfe46e3416071a", "testCaseId": "4fdacafbb1b4dd54a3f0db9630d2b36e", "fullName": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_AnnouncementDisable.TestIMAnnouncementDisable#test_IM_AnnouncementDisable", "labels": [{"name": "feature", "value": "资讯console_删除恢复资讯"}, {"name": "parentSuite", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM"}, {"name": "suite", "value": "test_IM_AnnouncementDisable"}, {"name": "subSuite", "value": "TestIMAnnouncementDisable"}, {"name": "host", "value": "DESKTOP-KBU1G8M"}, {"name": "thread", "value": "16652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.ConsoleManagement.InformationManagement.ConsoleIM.test_IM_AnnouncementDisable"}]}